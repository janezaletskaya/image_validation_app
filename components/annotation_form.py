import streamlit as st
from utils.annotations import save_annotation, get_current_annotation


def render_annotation_form(filename):
    """–†–µ–Ω–¥–µ—Ä–∏—Ç —Ñ–æ—Ä–º—É —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""

    st.markdown("### üè∑Ô∏è –†–∞–∑–º–µ—Ç–∫–∞")

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä–∞–∑–º–µ—Ç–∫—É
    current_annotation = get_current_annotation(filename)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    if current_annotation:
        st.success("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—á–µ–Ω–æ")
    else:
        st.info("‚è≥ –¢—Ä–µ–±—É–µ—Ç —Ä–∞–∑–º–µ—Ç–∫–∏")

    # –§–æ—Ä–º–∞ —Ä–∞–∑–º–µ—Ç–∫–∏
    with st.form(key=f"annotation_form_{st.session_state.current_image_index}"):

        # 1. –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
        st.markdown("#### üìã –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å")
        validity = st.radio(
            "–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏?",
            ["–í–∞–ª–∏–¥–Ω–æ", "–ù–µ–≤–∞–ª–∏–¥–Ω–æ"],
            index=0 if not current_annotation else (0 if current_annotation['validity'] == '–í–∞–ª–∏–¥–Ω–æ' else 1),
            help="–í–∞–ª–∏–¥–Ω–æ = –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ç–∫–æ–µ, –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è"
        )

        # 2. –ü–æ–ª (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)
        st.markdown("#### üë• –ü–æ–ª")
        col1, col2 = st.columns(2)

        with col1:
            gender_m = st.checkbox(
                "–ú—É–∂—Å–∫–æ–π (–ú)",
                value=current_annotation and '–ú' in current_annotation['gender'] if current_annotation else False,
                help="–û–¥–µ–∂–¥–∞ –¥–ª—è –º—É–∂—á–∏–Ω"
            )

        with col2:
            gender_f = st.checkbox(
                "–ñ–µ–Ω—Å–∫–∏–π (–ñ)",
                value=current_annotation and '–ñ' in current_annotation['gender'] if current_annotation else False,
                help="–û–¥–µ–∂–¥–∞ –¥–ª—è –∂–µ–Ω—â–∏–Ω"
            )

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–ª–∞
        gender_list = []
        if gender_m:
            gender_list.append("–ú")
        if gender_f:
            gender_list.append("–ñ")
        gender = "/".join(gender_list) if gender_list else ""

        # 3. –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–¥–µ–∂–¥—ã (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
        st.markdown("#### üëî –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–¥–µ–∂–¥—ã")
        category = st.radio(
            "–ö –∫–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –æ–¥–µ–∂–¥–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏?",
            ["–≤–µ—Ä—Ö", "–Ω–∏–∑", "–æ–±—É–≤—å", "–≥–æ–ª–æ–≤–∞", "–∞–∫—Å–µ—Å—Å—É–∞—Ä"],
            index=get_category_index(current_annotation),
            help="–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–¥–µ–∂–¥—ã"
        )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        with st.expander("üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
            notes = st.text_area(
                "–ó–∞–º–µ—Ç–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):",
                value=current_annotation.get('notes', '') if current_annotation else '',
                placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏...",
                help="–õ—é–±—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"
            )

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        col1, col2 = st.columns(2)

        with col1:
            submit_button = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", use_container_width=True)

        with col2:
            clear_button = st.form_submit_button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å", use_container_width=True)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        if submit_button:
            handle_form_submission(filename, validity, gender, category, notes)

        if clear_button:
            handle_clear_annotation(filename)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä–∞–∑–º–µ—Ç–∫—É
    if current_annotation:
        show_current_annotation(current_annotation)

    # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    render_quick_actions(filename)

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    render_annotation_shortcuts()
    render_batch_actions()
    render_annotation_statistics()
    render_validation_warnings()


def get_category_index(current_annotation):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    categories = ["–≤–µ—Ä—Ö", "–Ω–∏–∑", "–æ–±—É–≤—å", "–≥–æ–ª–æ–≤–∞", "–∞–∫—Å–µ—Å—Å—É–∞—Ä"]

    if not current_annotation:
        return 0

    try:
        return categories.index(current_annotation['category'])
    except (ValueError, KeyError):
        return 0


def handle_form_submission(filename, validity, gender, category, notes=""):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã —Ä–∞–∑–º–µ—Ç–∫–∏"""

    # –í–∞–ª–∏–¥–∞—Ü–∏—è
    if not gender:
        st.error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ–ª (–ú –∏–ª–∏ –ñ)")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
    try:
        success = save_annotation(filename, validity, gender, category, st.session_state.folder_name, notes)

        if success:
            st.success("‚úÖ –†–∞–∑–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")

            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ
            if st.session_state.current_image_index < len(st.session_state.images_list) - 1:
                st.session_state.current_image_index += 1
                st.rerun()
        else:
            st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ç–∫–∏")

    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


def handle_clear_annotation(filename):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—á–∏—Å—Ç–∫—É —Ä–∞–∑–º–µ—Ç–∫–∏"""

    # –£–¥–∞–ª—è–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    st.session_state.annotations = [
        ann for ann in st.session_state.annotations
        if ann['filename'] != filename
    ]

    st.success("üóëÔ∏è –†–∞–∑–º–µ—Ç–∫–∞ –æ—á–∏—â–µ–Ω–∞")
    st.rerun()


def show_current_annotation(annotation):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ä–∞–∑–º–µ—Ç–∫—É"""

    st.markdown("---")
    st.markdown("#### üìã –¢–µ–∫—É—â–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞:")

    col1, col2 = st.columns(2)

    with col1:
        st.metric("–í–∞–ª–∏–¥–Ω–æ—Å—Ç—å", annotation['validity'])
        st.metric("–ü–æ–ª", annotation['gender'])

    with col2:
        st.metric("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", annotation['category'])
        if annotation.get('notes'):
            st.caption(f"–ó–∞–º–µ—Ç–∫–∏: {annotation['notes']}")


def render_quick_actions(filename):
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"""

    st.markdown("---")
    st.markdown("#### ‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")

    col1, col2, col3 = st.columns(3)

    with col1:
        if st.button("‚úÖ –í–∞–ª–∏–¥–Ω–æ + –ñ + –≤–µ—Ä—Ö", use_container_width=True):
            save_annotation(filename, "–í–∞–ª–∏–¥–Ω–æ", "–ñ", "–≤–µ—Ä—Ö", st.session_state.folder_name)
            advance_to_next()

    with col2:
        if st.button("‚úÖ –í–∞–ª–∏–¥–Ω–æ + –ñ + –Ω–∏–∑", use_container_width=True):
            save_annotation(filename, "–í–∞–ª–∏–¥–Ω–æ", "–ñ", "–Ω–∏–∑", st.session_state.folder_name)
            advance_to_next()

    with col3:
        if st.button("‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–æ", use_container_width=True):
            save_annotation(filename, "–ù–µ–≤–∞–ª–∏–¥–Ω–æ", "–ñ", "–≤–µ—Ä—Ö", st.session_state.folder_name)
            advance_to_next()


def advance_to_next():
    """–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    if st.session_state.current_image_index < len(st.session_state.images_list) - 1:
        st.session_state.current_image_index += 1
        st.rerun()


def render_annotation_shortcuts():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏"""

    with st.expander("‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏"):
        st.markdown("""
        **–í–∞–ª–∏–¥–Ω–æ—Å—Ç—å:**
        - `V` - –í–∞–ª–∏–¥–Ω–æ
        - `N` - –ù–µ–≤–∞–ª–∏–¥–Ω–æ

        **–ü–æ–ª:**
        - `M` - –ú—É–∂—Å–∫–æ–π
        - `F` - –ñ–µ–Ω—Å–∫–∏–π

        **–ö–∞—Ç–µ–≥–æ—Ä–∏—è:**
        - `1` - –≤–µ—Ä—Ö
        - `2` - –Ω–∏–∑  
        - `3` - –æ–±—É–≤—å
        - `4` - –≥–æ–ª–æ–≤–∞
        - `5` - –∞–∫—Å–µ—Å—Å—É–∞—Ä

        **–î–µ–π—Å—Ç–≤–∏—è:**
        - `Ctrl + S` - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        - `Ctrl + D` - –û—á–∏—Å—Ç–∏—Ç—å
        - `Space` - –°–ª–µ–¥—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        - `Enter` - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
        """)


def render_batch_actions():
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""

    with st.expander("üîÑ –ú–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"):
        st.markdown("**–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ –≤—Å–µ–º –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º:**")

        col1, col2 = st.columns(2)

        with col1:
            batch_validity = st.selectbox(
                "–í–∞–ª–∏–¥–Ω–æ—Å—Ç—å:",
                ["–ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å", "–í–∞–ª–∏–¥–Ω–æ", "–ù–µ–≤–∞–ª–∏–¥–Ω–æ"]
            )

            batch_gender = st.selectbox(
                "–ü–æ–ª:",
                ["–ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å", "–ú", "–ñ", "–ú/–ñ"]
            )

        with col2:
            batch_category = st.selectbox(
                "–ö–∞—Ç–µ–≥–æ—Ä–∏—è:",
                ["–ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å", "–≤–µ—Ä—Ö", "–Ω–∏–∑", "–æ–±—É–≤—å", "–≥–æ–ª–æ–≤–∞", "–∞–∫—Å–µ—Å—Å—É–∞—Ä"]
            )

        if st.button("üöÄ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∞—Å—Å–æ–≤–æ", use_container_width=True):
            apply_batch_annotation(batch_validity, batch_gender, batch_category)


def apply_batch_annotation(validity, gender, category):
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É –∫–æ –≤—Å–µ–º –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º"""

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    annotated_files = {ann['filename'] for ann in st.session_state.annotations}
    unannotated_files = [
        filename for filename in st.session_state.images_list
        if filename not in annotated_files
    ]

    if not unannotated_files:
        st.warning("‚ö†Ô∏è –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–∂–µ —Ä–∞–∑–º–µ—á–µ–Ω—ã")
        return

    applied_count = 0

    for filename in unannotated_files:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        use_validity = validity if validity != "–ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å" else "–í–∞–ª–∏–¥–Ω–æ"
        use_gender = gender if gender != "–ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å" else "–ñ"
        use_category = category if category != "–ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å" else "–≤–µ—Ä—Ö"

        success = save_annotation(
            filename,
            use_validity,
            use_gender,
            use_category,
            st.session_state.folder_name
        )

        if success:
            applied_count += 1

    if applied_count > 0:
        st.success(f"‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –∫ {applied_count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º")
        st.rerun()
    else:
        st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ç–∫—É")


def render_annotation_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–∫—É—â–∏—Ö —Ä–∞–∑–º–µ—Ç–æ–∫"""

    if not st.session_state.annotations:
        return

    with st.expander("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–∑–º–µ—Ç–æ–∫"):
        from utils.annotations import get_annotation_stats
        stats = get_annotation_stats()

        col1, col2, col3 = st.columns(3)

        with col1:
            st.metric("–í—Å–µ–≥–æ —Ä–∞–∑–º–µ—á–µ–Ω–æ", stats['total'])
            st.metric("–í–∞–ª–∏–¥–Ω—ã—Ö", stats['valid'])
            st.metric("–ù–µ–≤–∞–ª–∏–¥–Ω—ã—Ö", stats['invalid'])

        with col2:
            st.markdown("**–ü–æ –ø–æ–ª—É:**")
            for gender, count in stats['by_gender'].items():
                st.text(f"{gender}: {count}")

        with col3:
            st.markdown("**–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:**")
            for category, count in stats['by_category'].items():
                st.text(f"{category}: {count}")


def render_validation_warnings():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–º–µ—Ç–∫–∏"""

    if not st.session_state.annotations:
        return

    warnings = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –≤–∞–ª–∏–¥–Ω—ã—Ö/–Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö
    valid_count = sum(1 for ann in st.session_state.annotations if ann['validity'] == '–í–∞–ª–∏–¥–Ω–æ')
    invalid_count = len(st.session_state.annotations) - valid_count

    if invalid_count > valid_count * 0.5:  # –ï—Å–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –±–æ–ª—å—à–µ 50%
        warnings.append("‚ö†Ô∏è –ú–Ω–æ–≥–æ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    from collections import Counter
    category_counts = Counter(ann['category'] for ann in st.session_state.annotations)
    max_count = max(category_counts.values()) if category_counts else 0
    min_count = min(category_counts.values()) if category_counts else 0

    if max_count > min_count * 3:  # –ï—Å–ª–∏ –¥–∏—Å–±–∞–ª–∞–Ω—Å –±–æ–ª—å—à–µ 3:1
        warnings.append("‚ö†Ô∏è –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")

    if warnings:
        with st.expander("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞"):
            for warning in warnings:
                st.warning(warning)


def get_annotation_progress():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–º–µ—Ç–∫–∏"""

    if not st.session_state.images_list:
        return 0, 0, 0

    total = len(st.session_state.images_list)
    annotated = len(st.session_state.annotations)
    remaining = total - annotated

    return total, annotated, remaining