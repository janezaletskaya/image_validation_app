import streamlit as st


def render_sidebar():
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""

    with st.sidebar:
        st.header("üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è")

        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (–µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã)
        if st.session_state.images_list:
            total_images = len(st.session_state.images_list)
            current_idx = st.session_state.current_image_index

            st.markdown(f"**–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {current_idx + 1} –∏–∑ {total_images}**")

            # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            progress = (current_idx + 1) / total_images
            st.progress(progress)

            # –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥
            new_index = st.selectbox(
                "–ü–µ—Ä–µ–π—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é:",
                range(total_images),
                index=current_idx,
                format_func=lambda
                    x: f"{x + 1}. {st.session_state.images_list[x][:30]}{'...' if len(st.session_state.images_list[x]) > 30 else ''}"
            )

            if new_index != current_idx:
                st.session_state.current_image_index = new_index
                st.rerun()

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–∑–º–µ—Ç–∫–∏
        if st.session_state.images_list:
            st.markdown("---")
            st.header("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

            total_images = len(st.session_state.images_list)
            annotated_count = len(st.session_state.annotations)

            st.metric("–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", total_images)
            st.metric("–†–∞–∑–º–µ—á–µ–Ω–æ", annotated_count)

            if total_images > 0:
                progress = annotated_count / total_images
                st.progress(progress)
                st.caption(f"{progress * 100:.1f}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            if st.session_state.annotations:
                with st.expander("üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"):
                    from utils.annotations import get_annotation_stats
                    stats = get_annotation_stats()

                    col1, col2 = st.columns(2)

                    with col1:
                        st.metric("–í–∞–ª–∏–¥–Ω—ã—Ö", stats['valid'])
                        st.metric("–ù–µ–≤–∞–ª–∏–¥–Ω—ã—Ö", stats['invalid'])

                    with col2:
                        if stats['by_gender']:
                            st.markdown("**–ü–æ –ø–æ–ª—É:**")
                            for gender, count in stats['by_gender'].items():
                                st.text(f"{gender}: {count}")

                        if stats['by_category']:
                            st.markdown("**–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:**")
                            for category, count in stats['by_category'].items():
                                st.text(f"{category}: {count}")

        # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        if st.session_state.images_list:
            st.markdown("---")
            st.header("‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")

            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω–æ–º—É
            unannotated_files = get_unannotated_files()
            if unannotated_files:
                if st.button("‚û°Ô∏è –ö –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω–æ–º—É", use_container_width=True):
                    next_idx = get_next_unannotated_index()
                    if next_idx is not None:
                        st.session_state.current_image_index = next_idx
                        st.rerun()

                st.caption(f"–û—Å—Ç–∞–ª–æ—Å—å: {len(unannotated_files)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            else:
                st.success("‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–º–µ—á–µ–Ω—ã!")

            # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë", use_container_width=True):
                if st.session_state.annotations:
                    st.session_state.annotations = []
                    st.success("–†–∞–∑–º–µ—Ç–∫–∏ –æ—á–∏—â–µ–Ω—ã")
                    st.rerun()

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
            if st.button("üîÑ –ù–æ–≤—ã–π –∞—Ä—Ö–∏–≤", use_container_width=True):
                # –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
                for key in ['images_list', 'image_paths', 'annotations', 'folder_name', 'current_image_index']:
                    if key in st.session_state:
                        if key == 'current_image_index':
                            st.session_state[key] = 0
                        elif key in ['images_list', 'annotations']:
                            st.session_state[key] = []
                        elif key in ['image_paths']:
                            st.session_state[key] = {}
                        else:
                            st.session_state[key] = ""
                st.rerun()

        # –ü–æ–º–æ—â—å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        st.markdown("---")
        st.header("‚ùì –ü–æ–º–æ—â—å")

        with st.expander("üîß –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏"):
            st.markdown("""
            **–ù–∞–≤–∏–≥–∞—Ü–∏—è:**
            - `‚Üê` / `‚Üí` - –ü—Ä–µ–¥—ã–¥—É—â–µ–µ/–°–ª–µ–¥—É—é—â–µ–µ
            - `Ctrl + ‚Üê` / `Ctrl + ‚Üí` - –ö –Ω–∞—á–∞–ª—É/–∫–æ–Ω—Ü—É

            **–†–∞–∑–º–µ—Ç–∫–∞:**
            - `V` - –í–∞–ª–∏–¥–Ω–æ
            - `N` - –ù–µ–≤–∞–ª–∏–¥–Ω–æ
            - `M` - –ú—É–∂—Å–∫–æ–π
            - `F` - –ñ–µ–Ω—Å–∫–∏–π
            """)

        with st.expander("üìã –§–æ—Ä–º–∞—Ç CSV"):
            st.markdown("""
            **–°—Ç–æ–ª–±—Ü—ã –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:**
            - `img_path` - –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            - `validity` - –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å (–í–∞–ª–∏–¥–Ω–æ/–ù–µ–≤–∞–ª–∏–¥–Ω–æ)
            - `gender` - –ø–æ–ª (–ú/–ñ/–ú/–ñ)
            - `category` - –∫–∞—Ç–µ–≥–æ—Ä–∏—è –æ–¥–µ–∂–¥—ã

            **–ü—Ä–∏–º–µ—Ä:**
            ```
            img_path,validity,gender,category
            —é–±–∫–∞/img1.jpg,–í–∞–ª–∏–¥–Ω–æ,–ñ,–Ω–∏–∑
            —à—Ç–∞–Ω—ã/img2.jpg,–í–∞–ª–∏–¥–Ω–æ,–ú,–Ω–∏–∑
            ```
            """)


def get_unannotated_files():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    if not st.session_state.images_list:
        return []

    annotated_files = {ann['filename'] for ann in st.session_state.annotations}

    return [
        filename for filename in st.session_state.images_list
        if filename not in annotated_files
    ]


def get_next_unannotated_index():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    unannotated_files = get_unannotated_files()

    if not unannotated_files:
        return None

    # –ò—â–µ–º –ø–µ—Ä–≤—ã–π –Ω–µ—Ä–∞–∑–º–µ—á–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ
    current_idx = st.session_state.current_image_index

    for i in range(current_idx + 1, len(st.session_state.images_list)):
        if st.session_state.images_list[i] in unannotated_files:
            return i

    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ, –∏—â–µ–º —Å –Ω–∞—á–∞–ª–∞
    for i in range(current_idx):
        if st.session_state.images_list[i] in unannotated_files:
            return i

    return None