import streamlit as st
from utils.helpers import extract_folder_name_from_url


def render_sidebar():
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""

    with st.sidebar:
        st.header("üìÇ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–ø–∫–∏")

        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        with st.expander("üìñ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å"):
            st.markdown("""
            **–®–∞–≥–∏:**
            1. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–∞–ø–∫—É Google Drive
            2. –£–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏)  
            3. –í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            4. –ù–∞—á–Ω–∏—Ç–µ —Ä–∞–∑–º–µ—Ç–∫—É!

            **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
            - –ü–∞–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —Å—Å—ã–ª–∫–µ
            - –ù—É–∂–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            """)

        # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É
        folder_url = st.text_input(
            "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É:",
            placeholder="https://drive.google.com/drive/folders/1ABC...",
            help="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É Google Drive —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"
        )

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥
        auto_name = extract_folder_name_from_url(folder_url) if folder_url else ""
        folder_name = st.text_input(
            "üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–¥–µ–∂–¥—ã:",
            value=auto_name,
            placeholder="—é–±–∫–∞, —à—Ç–∞–Ω—ã, —à–æ—Ä—Ç—ã, —à–ª—è–ø–∞...",
            help="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏"
        )

        if folder_name:
            st.session_state.folder_name = folder_name

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        if st.session_state.folder_name and folder_url:
            st.markdown("---")
            st.subheader("üìÅ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤")

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ
            if st.button("üîç –ù–∞–π—Ç–∏ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏", use_container_width=True):
                with st.spinner("–ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ Google Drive..."):
                    try:
                        from utils.google_drive import (
                            test_folder_access,
                            cached_get_files_from_folder,
                            format_file_info,
                            validate_files_data
                        )

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
                        access_ok, access_msg = test_folder_access(folder_url)

                        if not access_ok:
                            st.error(f"‚ùå {access_msg}")
                            st.info("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–∞–ø–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ '–≤—Å–µ–º, —É –∫–æ–≥–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞'")
                        else:
                            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã
                            files_data = cached_get_files_from_folder(folder_url)

                            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º
                            is_valid, validation_msg = validate_files_data(files_data)

                            if is_valid:
                                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∞–π–ª–∞—Ö
                                st.session_state.files_data = files_data
                                filenames = [f['filename'] for f in files_data]
                                st.session_state.images_list = filenames
                                st.session_state.current_image_index = 0

                                st.success(f"‚úÖ {validation_msg}")

                                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                                with st.expander("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"):
                                    st.text(format_file_info(files_data))

                                st.rerun()
                            else:
                                st.error(f"‚ùå {validation_msg}")

                    except Exception as e:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                        st.info("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ —Ñ–∞–π–ª–æ–≤ –Ω–∏–∂–µ")

            # –†—É—á–Ω–æ–π –≤–≤–æ–¥ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
            with st.expander("üìù –†—É—á–Ω–æ–π –≤–≤–æ–¥ —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)"):
                files_text = st.text_area(
                    "–ù–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤:",
                    placeholder="zr2509033501_262.jpg\nimage_001.png\nDSC_1234.jpeg",
                    height=150,
                    help="–í–≤–µ–¥–∏—Ç–µ –ø–æ –æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É –Ω–∞ —Å—Ç—Ä–æ–∫—É"
                )

                if st.button("‚úÖ –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Ä—É—á–Ω—É—é", use_container_width=True):
                    if files_text.strip():
                        filenames = [f.strip() for f in files_text.split('\n') if f.strip()]
                        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                        image_extensions = {'.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'}
                        valid_files = []

                        for filename in filenames:
                            if any(filename.lower().endswith(ext) for ext in image_extensions):
                                valid_files.append(filename)

                        if valid_files:
                            st.session_state.images_list = valid_files
                            st.session_state.current_image_index = 0
                            st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(valid_files)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                            st.rerun()
                        else:
                            st.error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                    else:
                        st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã)
        if st.session_state.images_list:
            st.markdown("---")
            st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

            total_images = len(st.session_state.images_list)
            annotated_count = len(st.session_state.annotations)

            st.metric("–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", total_images)
            st.metric("–†–∞–∑–º–µ—á–µ–Ω–æ", annotated_count)

            if total_images > 0:
                progress = annotated_count / total_images
                st.progress(progress)
                st.caption(f"{progress * 100:.1f}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

            # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            st.markdown("**üîß –î–µ–π—Å—Ç–≤–∏—è:**")

            if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ä–∞–∑–º–µ—Ç–∫–∏", use_container_width=True):
                if st.session_state.annotations:
                    st.session_state.annotations = []
                    st.success("–†–∞–∑–º–µ—Ç–∫–∏ –æ—á–∏—â–µ–Ω—ã")
                    st.rerun()

            if st.button("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫", use_container_width=True):
                st.session_state.images_list = []
                st.session_state.current_image_index = 0
                st.rerun()

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        if st.session_state.folder_name:
            st.markdown("---")
            st.caption("‚ÑπÔ∏è **–¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è:**")
            st.caption(f"–ü–∞–ø–∫–∞: {st.session_state.folder_name}")
            if st.session_state.images_list:
                current_file = st.session_state.images_list[st.session_state.current_image_index]
                st.caption(f"–§–∞–π–ª: {current_file}")