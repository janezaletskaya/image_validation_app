import streamlit as st
import pandas as pd
import os
from PIL import Image
import tempfile
import zipfile
import gdown
import time
from components.sidebar import render_sidebar
from components.navigation import render_navigation
from components.annotation_form import render_annotation_form
from utils.annotations import export_to_csv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–†–∞–∑–º–µ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Google Drive",
    page_icon="üè∑Ô∏è",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
if 'annotations' not in st.session_state:
    st.session_state.annotations = []
if 'current_image_index' not in st.session_state:
    st.session_state.current_image_index = 0
if 'images_list' not in st.session_state:
    st.session_state.images_list = []
if 'image_paths' not in st.session_state:
    st.session_state.image_paths = {}
if 'folder_name' not in st.session_state:
    st.session_state.folder_name = ""


@st.cache_data
def load_images_from_gdrive_zip(gdrive_url, folder_name):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ ZIP –∞—Ä—Ö–∏–≤–∞ –Ω–∞ Google Drive"""
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        temp_dir = tempfile.mkdtemp()

        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ —Å—Å—ã–ª–∫–∏ Google Drive
        if 'drive.google.com' in gdrive_url:
            if '/file/d/' in gdrive_url:
                file_id = gdrive_url.split('/file/d/')[1].split('/')[0]
            elif '?id=' in gdrive_url:
                file_id = gdrive_url.split('?id=')[1].split('&')[0]
            elif '/open?id=' in gdrive_url:
                file_id = gdrive_url.split('/open?id=')[1].split('&')[0]
            else:
                st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏ Google Drive. –ù—É–∂–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª.")
                return None, None
        else:
            st.error("–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–∑ Google Drive")
            return None, None

        # –°–∫–∞—á–∏–≤–∞–µ–º ZIP —Ñ–∞–π–ª
        zip_path = os.path.join(temp_dir, "images.zip")
        download_url = f"https://drive.google.com/uc?export=download&id={file_id}"

        with st.spinner("–°–∫–∞—á–∏–≤–∞–µ–º ZIP –∞—Ä—Ö–∏–≤..."):
            try:
                gdown.download(download_url, zip_path, quiet=False)
            except Exception as e:
                # –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
                st.warning("–ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–∫–∞—á–∏–≤–∞–Ω–∏—è...")
                download_url = f"https://drive.google.com/uc?id={file_id}"
                gdown.download(download_url, zip_path, quiet=False)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–∫–∞—á–∞–ª—Å—è
        if not os.path.exists(zip_path) or os.path.getsize(zip_path) == 0:
            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.")
            return None, None

        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º ZIP
        extract_dir = os.path.join(temp_dir, "extracted")
        with st.spinner("–ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."):
            with zipfile.ZipFile(zip_path, 'r') as zip_ref:
                zip_ref.extractall(extract_dir)

        # –ù–∞—Ö–æ–¥–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        images = []
        image_paths = {}

        for root, dirs, files in os.walk(extract_dir):
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–∞–ø–∫–∏
            if '__MACOSX' in root or '.DS_Store' in root:
                continue

            for file in files:
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã
                if file.startswith('._') or file.startswith('.DS_Store') or file.startswith('Thumbs.db'):
                    continue

                if file.lower().endswith(('.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp')):
                    full_path = os.path.join(root, file)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å
                    try:
                        with Image.open(full_path) as test_img:
                            test_img.verify()

                        # –ü–µ—Ä–µ–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª (verify() –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –µ–≥–æ)
                        with Image.open(full_path) as img:
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                            if img.size[0] > 50 and img.size[1] > 50:  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
                                images.append(file)
                                image_paths[file] = full_path
                    except Exception as e:
                        st.warning(f"–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {file}: {e}")

        if not images:
            st.error("–í –∞—Ä—Ö–∏–≤–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            return None, None

        st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        return images, image_paths

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ZIP –∞—Ä—Ö–∏–≤–∞: {e}")
        return None, None


def main():
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üè∑Ô∏è –†–∞–∑–º–µ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Google Drive")
    st.markdown("*–ó–∞–≥—Ä—É–∑–∏—Ç–µ ZIP –∞—Ä—Ö–∏–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Ä–∞–∑–º–µ—á–∞–π—Ç–µ –∏—Ö*")

    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    render_zip_upload_sidebar()

    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    if not st.session_state.images_list:
        show_welcome_screen()
    else:
        show_annotation_interface()

    # –ü–∞–Ω–µ–ª—å —ç–∫—Å–ø–æ—Ä—Ç–∞
    if st.session_state.annotations:
        show_export_panel()


def render_zip_upload_sidebar():
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ ZIP"""

    with st.sidebar:
        st.header("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ ZIP –∞—Ä—Ö–∏–≤–∞")

        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        with st.expander("üìñ –ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∞—Ä—Ö–∏–≤"):
            st.markdown("""
            **–®–∞–≥–∏:**
            1. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ
            2. –ó–∞–∞—Ä—Ö–∏–≤–∏—Ä—É–π—Ç–µ –ø–∞–ø–∫—É –≤ ZIP
            3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ ZIP –Ω–∞ Google Drive
            4. –ü–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" ‚Üí "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É"
            5. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ

            **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
            - ZIP –∞—Ä—Ö–∏–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ
            - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF, BMP, WEBP
            """)

        # –°—Å—ã–ª–∫–∞ –Ω–∞ ZIP –∞—Ä—Ö–∏–≤
        gdrive_url = st.text_input(
            "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ ZIP –∞—Ä—Ö–∏–≤:",
            placeholder="https://drive.google.com/file/d/1ABC.../view?usp=sharing",
            help="–°—Å—ã–ª–∫–∞ –Ω–∞ ZIP –∞—Ä—Ö–∏–≤ –≤ Google Drive"
        )

        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏/–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        folder_name = st.text_input(
            "üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–¥–µ–∂–¥—ã:",
            placeholder="—é–±–∫–∞, —à—Ç–∞–Ω—ã, —à–æ—Ä—Ç—ã...",
            help="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏"
        )

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        if st.button("üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", use_container_width=True):
            if not gdrive_url:
                st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ ZIP –∞—Ä—Ö–∏–≤")
            elif not folder_name:
                st.error("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–¥–µ–∂–¥—ã")
            else:
                # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                images, image_paths = load_images_from_gdrive_zip(gdrive_url, folder_name)

                if images and image_paths:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session state
                    st.session_state.images_list = images
                    st.session_state.image_paths = image_paths
                    st.session_state.folder_name = folder_name
                    st.session_state.current_image_index = 0
                    st.session_state.gdrive_url = gdrive_url

                    st.rerun()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
        if st.session_state.images_list:
            st.markdown("---")
            st.subheader("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")

            total_images = len(st.session_state.images_list)
            annotated_count = len(st.session_state.annotations)

            st.metric("–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", total_images)
            st.metric("–†–∞–∑–º–µ—á–µ–Ω–æ", annotated_count)

            if total_images > 0:
                progress = annotated_count / total_images
                st.progress(progress)
                st.caption(f"{progress * 100:.1f}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

            # –î–µ–π—Å—Ç–≤–∏—è
            st.markdown("**üîß –î–µ–π—Å—Ç–≤–∏—è:**")

            if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ä–∞–∑–º–µ—Ç–∫–∏", use_container_width=True):
                st.session_state.annotations = []
                st.success("–†–∞–∑–º–µ—Ç–∫–∏ –æ—á–∏—â–µ–Ω—ã")
                st.rerun()

            if st.button("üîÑ –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π –∞—Ä—Ö–∏–≤", use_container_width=True):
                # –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                st.session_state.images_list = []
                st.session_state.image_paths = {}
                st.session_state.annotations = []
                st.session_state.folder_name = ""
                st.session_state.current_image_index = 0
                st.rerun()


def show_welcome_screen():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω"""
    st.markdown("---")

    col1, col2 = st.columns([1, 1])

    with col1:
        st.info(
            "üëÜ **–ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É:**\n1. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ ZIP –∞—Ä—Ö–∏–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏\n2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ Google Drive\n3. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏")

    with col2:
        st.markdown("### üì¶ –ü—Ä–∏–º–µ—Ä ZIP –∞—Ä—Ö–∏–≤–∞:")
        st.code("""images.zip
‚îú‚îÄ‚îÄ image1.jpg
‚îú‚îÄ‚îÄ image2.png  
‚îú‚îÄ‚îÄ photo3.jpeg
‚îî‚îÄ‚îÄ picture4.jpg""")

    # –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    with st.expander("üìã –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"):
        st.markdown("""
        ### üîß –°–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞:

        1. **–°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É** –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –æ–¥–µ–∂–¥—ã
        2. **–ó–∞–∞—Ä—Ö–∏–≤–∏—Ä—É–π—Ç–µ –ø–∞–ø–∫—É** –≤ ZIP (–ø—Ä–∞–≤—ã–π –∫–ª–∏–∫ ‚Üí "–°–∂–∞—Ç—å –≤ ZIP")
        3. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ ZIP –Ω–∞ Google Drive**

        ### üîó –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏:

        1. **–û—Ç–∫—Ä–æ–π—Ç–µ ZIP —Ñ–∞–π–ª** –≤ Google Drive
        2. **–ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"** (–∑–Ω–∞—á–æ–∫ —Å —á–µ–ª–æ–≤–µ—á–∫–∞–º–∏)
        3. **–ò–∑–º–µ–Ω–∏—Ç–µ –¥–æ—Å—Ç—É–ø** –Ω–∞ "–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è –≤—Å–µ—Ö, —É –∫–æ–≥–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞"
        4. **–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É** –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª–µ –≤—ã—à–µ

        ### üè∑Ô∏è –†–∞–∑–º–µ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:

        - **–í–∞–ª–∏–¥–Ω–æ—Å—Ç—å:** –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
        - **–ü–æ–ª:** –º—É–∂—Å–∫–∞—è/–∂–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞ (–º–æ–∂–Ω–æ –æ–±–∞)
        - **–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** —Ç–∏–ø –æ–¥–µ–∂–¥—ã (–≤–µ—Ä—Ö/–Ω–∏–∑/–æ–±—É–≤—å/–≥–æ–ª–æ–≤–∞/–∞–∫—Å–µ—Å—Å—É–∞—Ä)

        ### üì• –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:

        –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–∫–∞—á–∞–π—Ç–µ CSV —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞–∑–º–µ—Ç–∫–∏.
        """)


def show_annotation_interface():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–∑–º–µ—Ç–∫–∏"""
    st.markdown("---")

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    render_navigation()

    st.markdown("---")

    # –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    current_idx = st.session_state.current_image_index
    current_filename = st.session_state.images_list[current_idx]

    col1, col2 = st.columns([2, 1])

    with col1:
        show_image_area(current_filename)

    with col2:
        render_annotation_form(current_filename)


def show_image_area(filename):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±–ª–∞—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    st.markdown("### üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")

    # –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
    st.info(f"üìÅ **–§–∞–π–ª:** {filename}\nüìÇ **–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {st.session_state.folder_name}")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
    if filename in st.session_state.image_paths:
        try:
            img_path = st.session_state.image_paths[filename]
            img = Image.open(img_path)
            st.image(img, use_container_width=True, caption=filename)

        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")
            show_placeholder_image()
    else:
        st.error("‚ùå –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
        show_placeholder_image()


def show_placeholder_image():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    st.image("https://via.placeholder.com/500x350/f8f9fa/6c757d?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ+–Ω–µ+–Ω–∞–π–¥–µ–Ω–æ",
             use_container_width=True,
             caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")


def show_export_panel():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    st.markdown("---")
    st.header("üì§ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

    col1, col2, col3 = st.columns([1, 1, 1])

    with col1:
        annotated_count = len(st.session_state.annotations)
        total_count = len(st.session_state.images_list)
        st.metric("–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑–º–µ—Ç–∫–∏", f"{annotated_count}/{total_count}")

        if total_count > 0:
            progress_percent = (annotated_count / total_count) * 100
            st.progress(progress_percent / 100)
            st.caption(f"{progress_percent:.1f}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

    with col2:
        if st.button("üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É", use_container_width=True):
            if st.session_state.annotations:
                df = pd.DataFrame(st.session_state.annotations)
                st.dataframe(df[['img_path', 'validity', 'gender', 'category']],
                             use_container_width=True)
            else:
                st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")

    with col3:
        csv_data = export_to_csv(st.session_state.annotations)
        if csv_data:
            timestamp = int(time.time())
            filename = f"annotations_{st.session_state.folder_name}_{timestamp}.csv"
            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å CSV",
                data=csv_data,
                file_name=filename,
                mime="text/csv",
                use_container_width=True
            )
        else:
            st.button("üì• –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", disabled=True, use_container_width=True)


if __name__ == "__main__":
    main()